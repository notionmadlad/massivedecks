"use strict";(self.webpackChunk_massivedecks_client=self.webpackChunk_massivedecks_client||[]).push([[617],{484:function(e,t,s){s.r(t),s.d(t,{register:function(){return n}});var a=s(943);const n=(e,t)=>{new r(e,t)};let o=[];window.__onGCastApiAvailable=e=>{if(e)if(cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:"A6799922",autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED}),null!=o){for(const e of o)e();o=null}else console.warn("Cast API initialized twice.")};class r{constructor(e,t){null==o?this.onceCastApiAvailable():o.push((()=>this.onceCastApiAvailable())),this.tryCast=e,this.status=t,this.commandQueue=[]}onceCastApiAvailable(){this.tryCast.subscribe((e=>this.toggleCast(e)));const e=cast.framework.CastContext.getInstance();e.addEventListener(cast.framework.CastContextEventType.CAST_STATE_CHANGED,this.onCastStateChanged.bind(this)),e.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED,this.onSessionStateChanged.bind(this)),this.status.send(e.getCastState())}toggleCast(e){const t=cast.framework.CastContext.getInstance();t.getCastState()===cast.framework.CastState.CONNECTED?t.endCurrentSession(!0):(this.commandQueue.push(e),t.requestSession().then((function(e){void 0!==e&&console.error(`Error response requesting session: ${e}`)})).catch((function(e){console.error(`Error while requesting session: ${e}`)})))}onCastStateChanged(e){let t;if(e.castState===cast.framework.CastState.NO_DEVICES_AVAILABLE)t={status:"NoDevicesAvailable"};else if(e.castState===cast.framework.CastState.NOT_CONNECTED)t={status:"NotConnected"};else if(e.castState===cast.framework.CastState.CONNECTING)t={status:"Connecting"};else{if(e.castState!==cast.framework.CastState.CONNECTED)throw new Error("Unknown cast state.");{t={status:"Connected"};const e=cast.framework.CastContext.getInstance().getCurrentSession();e&&(t.name=e.getCastDevice().friendlyName)}}this.status.send(t)}onSessionStateChanged(e){if(!e.errorCode&&e.sessionState===cast.framework.SessionState.SESSION_STARTED||e.sessionState===cast.framework.SessionState.SESSION_RESUMED){for(const t of this.commandQueue)e.session.sendMessage(a.C,JSON.stringify(t)).catch((e=>console.error(e)));e.session.addMessageListener(a.$,((t,s)=>this.onKeepAliveMessage(e.session,t,s)))}e.sessionState==cast.framework.SESSION_START_FAILED&&console.error(`Error ${e.errorCode}: Failed to start session.`)}onKeepAliveMessage(e,t,s){"ping"===s&&e.sendMessage(a.$,"pong").catch((e=>console.error(e)))}}},943:function(e,t,s){s.d(t,{$:function(){return n},C:function(){return a}});const a="urn:x-cast:com.rereadgames.massivedecks",n=`${a}.keepalive`}}]);